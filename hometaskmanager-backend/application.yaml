openapi: 3.0.0
info:
  title: Meine REST-API
  description: Eine Beispiel-API mit Swagger
  version: 1.0.0

# Spring Server Konfiguration
server:
  port: 8080

spring:
  datasource:
    url: jdbc:mariadb://localhost:3306/home_task_manager
    username: root
    password: Acer-AoC-Logitech
    driver-class-name: org.mariadb.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

# Angular Client Konfiguration
client:
  server-url: http://localhost:8080


servers:
  - url: http://localhost:8080
paths:
  /tasks:
    get:
      summary: Alle Aufgaben abrufen
      responses:
        '200':
          description: Erfolgreiche Abfrage
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/Task'
    post:
      summary: Neue Aufgabe erstellen
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: Aufgabe erstellt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
  /tasks/{id}:
    get:
      summary: Eine Aufgabe abrufen
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Erfolgreiche Abfrage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

components:
  schemas:
    Task:
      type: object
        properties:
          id:
            type: integer

entities:
  - name: Task
    fields:
      - name: id
        type: Integer
        primaryKey: true
        generatedValue: true
      - name: listId
        type: Integer
        foreignKey:
          entity: List
          referencedColumnName: id
      - name: name
        type: String
        size: 250
      - name: priority
        type: Integer
      - name: startDate
        type: Date
      - name: description
        type: String
        size: 250
      - name: done
        type: Boolean
      - name: points
        type: Integer
      - name: markedForDelete
        type: Boolean
      - name: createDate
        type: Date
      - name: changeDate
        type: Date
  - name: List
    fields:
      - name: id
        type: Integer
        primaryKey: true
        generatedValue: true
      - name: name
        type: String
        size: 250
      - name: createDate
        type: Date
      - name: changeDate
        type: Date

endpoints:
  - path: /api/v1/task
    description: CRUD operations for tasks
    methods:
      - method: GET
        description: Retrieve all tasks
      - method: GET
        path: /{id}
        description: Retrieve task by ID
      - method: POST
        description: Create a new task
      - method: PUT
        path: /{id}
        description: Update an existing task
      - method: DELETE
        path: /{id}
        description: Delete a task by ID